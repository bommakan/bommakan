{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storage-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Storage Account"
            }
        },
        "vnet-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Virtual Network"
            }
        },
        "pip-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Public IP Address"
            }
        },
        "lb-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the load balancers"
            }
        },
        "vm-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Virtual Machine"
            }
        },
        "dc-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for Domain Controllers"
            }
        },

        "sql-settings": {
            "type": "object",
            "metadata": {
                "description": "These are settings for the Storage Account"
            }
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "description": "Base URL for Resource and Shared Templates"
            }
        }
    },
    "variables": {
        "dscScriptsFolder": "dsc-scripts/feature-pattern-3",
        "resourcesFolder": "resources/feature-pattern-3",
        "dscScriptsUrl": "[concat(parameters('baseUrl'), variables('dscScriptsFolder'))]",
        "resourcesUrl": "[concat(parameters('baseUrl'), variables('resourcesFolder'))]",
        "avsSettings": {
            "name": [ "mgmt-avs", "web-avs", "biz-avs", "sql-avs", "dc-avs" ],
            "updateCount": [ 5, 5, 5, 5, 5 ],
            "faultCount": [ 3, 3, 3, 3, 3 ]
        },
        "diagTemplate": "[concat(variables('resourcesUrl'), '/', 'extn-diag.template.json')]",
        "dscTemplate": "[concat(variables('resourcesUrl'), '/', 'extn-dsc.template.json')]",
        "scriptTemplate": "[concat(variables('resourcesUrl'), '/', 'extn-script.template.json')]",
        "lbTemplate": "[concat(variables('resourcesUrl'), '/', 'lb.template.json')]",
        "nicTemplate": "[concat(variables('resourcesUrl'), '/', 'nic.template.json')]",
        "nsgTemplate": "[concat(variables('resourcesUrl'), '/', 'nsg.template.json')]",
        "pipTemplate": "[concat(variables('resourcesUrl'), '/pip-', parameters('pip-settings').newOrExisting, '.template.json')]",
        "sharedTemplate": "[concat(variables('resourcesUrl'), '/sharedResources.template.json')]",
        "storageTemplate": "[concat(variables('resourcesUrl'), '/storage-', parameters('storage-settings').newOrExisting, '.template.json')]",
        "vnetTemplate": "[concat(variables('resourcesUrl'), '/vnet-', parameters('vnet-settings').newOrExisting, '.template.json')]",
        "dcCount": 2,
        "extLbBackendPoolID": "[concat(variables('extLbID'),'/backendAddressPools/', variables('extLbBackendPoolName'))]",
        "extLbBackendPoolName": "extLb-backEnd-http",
        "extLbBackendPort": 3389,
        "extLbFrontendPoolID": "[concat(variables('extLbID'),'/frontendIPConfigurations/', variables('extLbFrontendPoolName'))]",
        "extLbFrontendPoolName": "extLb-frontEnd",
        "extLbID": "[resourceId('Microsoft.Network/loadBalancers', variables('extLbName'))]",
        "extLbName": "extLb",
        "extLbProbeID": "[concat(variables('extLbID'),'/probes/', variables('extLbProbeName'))]",
        "extLbProbeName": "http-probe",
        "extLbRuleName": "lb-rule-http",
        "bizLbBackendPoolID": "[concat(variables('bizLbID'),'/backendAddressPools/', variables('bizLbBackendPoolName'))]",
        "bizLbBackendPoolName": "bizLb-backEnd",
        "bizLbFrontendIP": "[parameters('lb-settings').internalIPAddresses[0]]",
        "bizLbFrontendPoolID": "[concat(variables('bizLbID'),'/frontendIPConfigurations/', variables('bizLbFrontendPoolName'))]",
        "bizLbFrontendPoolName": "bizLb-frontEnd",
        "bizLbID": "[resourceId('Microsoft.Network/loadBalancers', variables('bizLbName'))]",
        "bizLbName": "bizLb",
        "bizLbPort": "[parameters('lb-settings').internalPorts[0]]",
        "bizLbProbeID": "[concat(variables('bizLbID'),'/probes/', variables('bizLbProbeName'))]",
        "bizLbProbeName": "biz-probe",
        "bizLbRuleName": "lb-rule-biz",
        "sqlLbBackendPoolID": "[concat(variables('sqlLbID'),'/backendAddressPools/', variables('sqlLbBackendPoolName'))]",
        "sqlLbBackendPoolName": "sqlLb-backEnd",
        "sqlLbFrontendIP": "[parameters('lb-settings').internalIPAddresses[1]]",
        "sqlLbFrontendPoolID": "[concat(variables('sqlLbID'),'/frontendIPConfigurations/', variables('sqlLbFrontendPoolName'))]",
        "sqlLbFrontendPoolName": "sqlLb-frontEnd",
        "sqlLbID": "[resourceId('Microsoft.Network/loadBalancers', variables('sqlLbName'))]",
        "sqlLbName": "sqlLb",
        "sqlLbPort": "[parameters('lb-settings').internalPorts[1]]",
        "sqlLbProbeID": "[concat(variables('sqlLbID'),'/probes/', variables('sqlLbProbeName'))]",
        "sqlLbProbeName": "sql-probe",
        "sqlLbRuleName": "lb-rule-sql",
        "math": {
            "modulo2": [ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ],
            "modulo3": [ 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2 ]
        },
        "pipName": "web-pip",
        "vmNamePrefix": "web-vm-",
        "vmOS": [
            [ "MicrosoftWindowsServer", "WindowsServer", "2016-Datacenter", "windows" ],
            [ "Canonical", "UbuntuServer", "16.04-LTS", "linux" ],
            [ "MicrosoftSQLServer", "SQL2016SP1-WS2016", "Enterprise", "windows" ]
        ],
        "vmDiag": [
            [ "iaas-diagnostic", "Microsoft.Azure.Diagnostics", "IaaSDiagnostics", "1.8" ],
            [ "linux-diagnostic", "Microsoft.OSTCExtensions", "LinuxDiagnostic", "2.3" ]
        ],
        "vmDscScript": [
            [ "dsc-iis", "Microsoft.Powershell", "DSC", "2.9", "[variables('dscTemplate')]", "[variables('dscScriptsUrl')]", "iis-on-windows-vm", "iis-config-dsc", "Main" ],
            [ "script-apache", "Microsoft.Azure.Extensions", "CustomScript", "2.0", "[variables('scriptTemplate')]", "[variables('dscScriptsUrl')]", "apache2-on-ubuntu-vm", "install_apache.sh", null ]
        ],
        "vmTemplate": "[concat(variables('resourcesUrl'), '/vm-', variables('vmOS')[parameters('vm-settings').type][3], '.template.json')]"


    },
    "resources": [
        {
            "name": "[concat('storage-', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "storageLoop",
                "count": "[parameters('storage-settings')]"
            },
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "accounts": "[parameters('storage-settings')[copyIndex()].accounts]",
                            "count": "[length(parameters('storage-settings')[copyIndex()].accounts)]",
                            "accountType": "[parameters('storage-settings')[copyIndex()].accountType]",
                            "newOrExisting": "[parameters('storage-settings')[copyIndex()].newOrExisting]",
                            "existingRg": "[parameters('storage-settings')[copyIndex()].existingRg]"
                        }
                    }
                }
            }
        },
        {
            "name": "sharedResources",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sharedTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "accounts": "[parameters('storage-settings')[0].accounts]",
                            "count": "[length(parameters('storage-settings')[0].accounts)]",
                            "accountType": "[parameters('storage-settings')[0].accountType]",
                            "newOrExisting": "Existing",
                            "existingRg": "[reference('storage-0').outputs.storageAccountId.value.name]"
                        }
                    },
                    "vnet-settings": {
                        "value": {
                            "name": "[parameters('vnet-settings').name]",
                            "newOrExisting": "[parameters('vnet-settings').newOrExisting]",
                            "existingRg": "[parameters('vnet-settings').existingRg]",
                            "prefix": "[parameters('vnet-settings').prefix]",
                            "subnets": [
                                {
                                    "name": "[parameters('vnet-settings').subnets.subnet0Name]",
                                    "properties": {
                                        "addressPrefix": "[parameters('vnet-settings').subnets.subnet0Prefix]"
                                    }
                                },
                                {
                                    "name": "[parameters('vnet-settings').subnets.subnet1Name]",
                                    "properties": {
                                        "addressPrefix": "[parameters('vnet-settings').subnets.subnet1Prefix]"
                                    }
                                },
                                {
                                    "name": "[parameters('vnet-settings').subnets.subnet2Name]",
                                    "properties": {
                                        "addressPrefix": "[parameters('vnet-settings').subnets.subnet2Prefix]"
                                    }
                                },
                                {
                                    "name": "[parameters('vnet-settings').subnets.subnet3Name]",
                                    "properties": {
                                        "addressPrefix": "[parameters('vnet-settings').subnets.subnet3Prefix]"
                                    }
                                },
                                {
                                    "name": "[parameters('vnet-settings').subnets.subnet4Name]",
                                    "properties": {
                                        "addressPrefix": "[parameters('vnet-settings').subnets.subnet4Prefix]"
                                    }
                                }
                            ],
                            "dnsSettings": []
                        }
                    },
                    "avs-settings": {
                        "value": "[variables('avsSettings')]"
                    },
                    "resourcesUrl": {
                        "value": "[variables('resourcesUrl')]"
                    }
                }
            }
        },
        {
            "name": "publicIp",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('pipTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "pip-settings": {
                        "value": {
                            "name": "[variables('pipName')]",
                            "dnsName": "[parameters('pip-settings').dnsName]",
                            "publicIPAllocationMethod": "Dynamic"
                        }
                    }
                }
            }
        },
        {
            "name": "externalLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'public-ip')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('lbTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "lb-settings": {
                        "value": {
                            "name": "[variables('extLbName')]",
                            "count": "[parameters('vm-settings').vmCount]",
                            "backendPort": "[variables('extLbBackendPort')]",
                            "frontendIPConfigurations": [
                                {
                                    "name": "[variables('extLbFrontendPoolName')]",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "publicIPAddress": {
                                            "id": "[reference('public-ip').outputs.pipID.value]"
                                        }
                                    }
                                }
                            ],
                            "backendAddressPools": [
                                {
                                    "name": "[variables('extLbBackendPoolName')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "name": "[variables('extLbRuleName')]",
                                    "properties": {
                                        "frontendIPConfiguration": {
                                            "id": "[variables('extLbFrontendPoolID')]"
                                        },
                                        "frontendPort": 80,
                                        "backendPort": 80,
                                        "enableFloatingIP": false,
                                        "idleTimeoutInMinutes": 4,
                                        "protocol": "Tcp",
                                        "loadDistribution": "SourceIPProtocol",
                                        "backendAddressPool": {
                                            "id": "[variables('extLbBackendPoolID')]"
                                        },
                                        "probe": {
                                            "id": "[variables('extLbProbeID')]"
                                        }
                                    }
                                }
                            ],
                            "probes": [
                                {
                                    "name": "[variables('extLbProbeName')]",
                                    "properties": {
                                        "protocol": "Http",
                                        "port": 80,
                                        "requestPath": "/",
                                        "intervalInSeconds": 5,
                                        "numberOfProbes": 2
                                    }
                                }
                            ],
                            "inboundNatRules": [],
                            "outboundNatRules": [],
                            "inboundNatPools": []
                        }
                    }
                }
            }
        },
        {
            "name": "bizLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('lbTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "lb-settings": {
                        "value": {
                            "name": "[variables('bizLbName')]",
                            "count": "[parameters('vm-settings').count]",
                            "backendPort": "[variables('bizLbPort')]",
                            "frontendIPConfigurations": [
                                {
                                    "name": "[variables('bizLbFrontendPoolName')]",
                                    "properties": {
                                        "privateIPAddress": "[variables('bizLbFrontendIP')]",
                                        "privateIPAllocationMethod": "static"
                                    }
                                }
                            ],
                            "backendAddressPools": [
                                {
                                    "name": "[variables('bizLbBackendPoolName')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "name": "[variables('bizLbRuleName')]",
                                    "properties": {
                                        "frontendIPConfiguration": {
                                            "id": "[variables('bizLbFrontendPoolID')]"
                                        },
                                        "frontendPort": "[variables('bizLbPort')]",
                                        "backendPort": "[variables('bizLbPort')]",
                                        "enableFloatingIP": false,
                                        "idleTimeoutInMinutes": 4,
                                        "protocol": "Tcp",
                                        "loadDistribution": "SourceIPProtocol",
                                        "backendAddressPool": {
                                            "id": "[variables('bizLbBackendPoolID')]"
                                        },
                                        "probe": {
                                            "id": "[variables('bizLbProbeID')]"
                                        }
                                    }
                                }
                            ],
                            "probes": [
                                {
                                    "name": "[variables('bizLbProbeName')]",
                                    "properties": {
                                        "protocol": "Tcp",
                                        "port": "[variables('bizLbPort')]",
                                        "requestPath": "/",
                                        "intervalInSeconds": 5,
                                        "numberOfProbes": 2
                                    }
                                }
                            ],
                            "inboundNatRules": [],
                            "outboundNatRules": [],
                            "inboundNatPools": []
                        }
                    }
                }
            }
        },
        {
            "name": "sqlLoadBalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('lbTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "lb-settings": {
                        "value": {
                            "name": "[variables('sqlLbName')]",
                            "count": "[parameters('sql-settings').count]",
                            "backendPort": "[variables('sqlLbPort')]",
                            "frontendIPConfigurations": [
                                {
                                    "name": "[variables('sqlLbFrontendPoolName')]",
                                    "properties": {
                                        "privateIPAddress": "[variables('sqlLbFrontendIP')]",
                                        "privateIPAllocationMethod": "static"
                                    }
                                }
                            ],
                            "backendAddressPools": [
                                {
                                    "name": "[variables('sqlLbBackendPoolName')]"
                                }
                            ],
                            "loadBalancingRules": [
                                {
                                    "name": "[variables('sqlLbRuleName')]",
                                    "properties": {
                                        "frontendIPConfiguration": {
                                            "id": "[variables('sqlLbFrontendPoolID')]"
                                        },
                                        "frontendPort": "[variables('bizLbPort')]",
                                        "backendPort": "[variables('bizLbPort')]",
                                        "enableFloatingIP": true,
                                        "idleTimeoutInMinutes": 4,
                                        "protocol": "Tcp",
                                        "loadDistribution": "SourceIPProtocol",
                                        "backendAddressPool": {
                                            "id": "[variables('sqlLbBackendPoolID')]"
                                        },
                                        "probe": {
                                            "id": "[variables('sqlLbProbeID')]"
                                        }
                                    }
                                }
                            ],
                            "probes": [
                                {
                                    "name": "[variables('sqlLbProbeName')]",
                                    "properties": {
                                        "protocol": "Tcp",
                                        "port": "[variables('sqlLbPort')]",
                                        "requestPath": "/",
                                        "intervalInSeconds": 5,
                                        "numberOfProbes": 2
                                    }
                                }
                            ],
                            "inboundNatRules": [],
                            "outboundNatRules": [],
                            "inboundNatPools": []
                        }
                    }
                }
            }
        },
        {
            "name": "mgmtNsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsg-settings": {
                        "value": {
                            "name": "mgmt-nsg",
                            "securityRules": [
                                {
                                    "name": "rdp-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "[parameters('vnet-settings').prefix]",
                                        "destinationPortRange": "3389",
                                        "access": "Allow",
                                        "priority": 100
                                    }
                                },
                                {
                                    "name": "vnet-deny",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Deny",
                                        "priority": 200
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "webNsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsg-settings": {
                        "value": {
                            "name": "web-nsg",
                            "securityRules": [
                                {
                                    "name": "http-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "[parameters('vnet-settings').prefix]",
                                        "destinationPortRange": "80",
                                        "access": "Allow",
                                        "priority": 100
                                    }
                                },
                                {
                                    "name": "vnet-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "80",
                                        "access": "Allow",
                                        "priority": 200
                                    }
                                },
                                {
                                    "name": "rdp-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').subnets.subnet0Prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "3389",
                                        "access": "Allow",
                                        "priority": 300
                                    }
                                },
                                {
                                    "name": "vnet-deny",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Deny",
                                        "priority": 400
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "bizNsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsg-settings": {
                        "value": {
                            "name": "biz-nsg",
                            "securityRules": [
                                {
                                    "name": "web-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').subnets.subnet1Prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Allow",
                                        "priority": 100
                                    }
                                },
                                {
                                    "name": "rdp-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').subnets.subnet0Prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "3389",
                                        "access": "Allow",
                                        "priority": 200
                                    }
                                },
                                {
                                    "name": "vnet-deny",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Deny",
                                        "priority": 300
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "sqlNsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsg-settings": {
                        "value": {
                            "name": "sql-nsg",
                            "securityRules": [
                                {
                                    "name": "biz-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').subnets.subnet2Prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "49168",
                                        "access": "Allow",
                                        "priority": 100
                                    }
                                },
                                {
                                    "name": "rdp-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').subnets.subnet0Prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "3389",
                                        "access": "Allow",
                                        "priority": 200
                                    }
                                },
                                {
                                    "name": "vnet-deny",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Deny",
                                        "priority": 300
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "dcNsg",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nsg-settings": {
                        "value": {
                            "name": "dc-nsg",
                            "securityRules": [
                                {
                                    "name": "ntp-allow",
                                    "properties": {
                                        "protocol": "UDP",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "123",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 100,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "rpc-allow",
                                    "properties": {
                                        "protocol": "TCP",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "135",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 110,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "kerberos-allow",
                                    "properties": {
                                        "protocol": "*",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "464",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 120,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "ldap-allow",
                                    "properties": {
                                        "protocol": "TCP",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "389",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 130,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "ldaps-allow",
                                    "properties": {
                                        "protocol": "*",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "636",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 140,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "gc-allow",
                                    "properties": {
                                        "protocol": "*",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "3268",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 150,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "gcs-allow",
                                    "properties": {
                                        "protocol": "*",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "3269",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 160,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "dns-allow",
                                    "properties": {
                                        "protocol": "*",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "53",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 170,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "kerberos2-allow",
                                    "properties": {
                                        "protocol": "*",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "88",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 180,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "smb",
                                    "properties": {
                                        "protocol": "TCP",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "445",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 190,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "dynamic-allow",
                                    "properties": {
                                        "protocol": "TCP",
                                        "sourcePortRange": "*",
                                        "destinationPortRange": "49152-65535",
                                        "sourceAddressPrefix": "*",
                                        "destinationAddressPrefix": "*",
                                        "access": "Allow",
                                        "priority": 200,
                                        "direction": "Inbound"
                                    }
                                },
                                {
                                    "name": "rdp-allow",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "TCP",
                                        "sourceAddressPrefix": "[parameters('vnet-settings').subnets.subnet0Prefix]",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "3389",
                                        "access": "Allow",
                                        "priority": 210
                                    }
                                },
                                {
                                    "name": "vnet-deny",
                                    "properties": {
                                        "direction": "Inbound",
                                        "protocol": "*",
                                        "sourceAddressPrefix": "*",
                                        "sourcePortRange": "*",
                                        "destinationAddressPrefix": "*",
                                        "destinationPortRange": "*",
                                        "access": "Deny",
                                        "priority": 300
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        {
            "name": "mgmtNic",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'mgmtNsg')]",
                "[resourceId('Microsoft.Resources/deployments', 'loadBalancer')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "mgmt-nic",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('sharedResources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet0Name)]"
                                        },
                                        "loadBalancerInboundNatRules": [
                                            {
                                                "id": "[concat(variables('extLbID'), '/inboundNatRules/nat-rdp-vm', copyIndex())]"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'mgmt-nsg')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('webNic-', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vm-settings').vmCount]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'webNsg')]",
                "[resourceId('Microsoft.Resources/deployments', 'loadBalancer')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "[concat('web-nic-', copyindex())]",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('sharedResources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet1Name)]"
                                        },
                                        "loadBalancerBackendAddressPools": [
                                            {
                                                "id": "[variables('extLbBackendPoolID')]"
                                            }
                                        ]
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'web-nsg')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('bizNic-', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vm-settings').vmCount]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'bizNsg')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "[concat('biz-nic-', copyindex())]",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('sharedResources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet2Name)]"
                                        }
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'biz-nsg')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('sqlNic-', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "nicLoop",
                "count": "[parameters('vm-settings').vmCount]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'sqlNsg')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "[concat('sql-nic-', copyindex())]",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('sharedResources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet3Name)]"
                                        }
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'sql-nsg')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('dcNic-', copyindex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "copy": {
                "name": "nicLoop",
                "count": 2
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'dcNsg')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "[concat('dc-nic-', copyindex())]",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('sharedResources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet4Name)]"
                                        }
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'dc-nsg')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "clusterFswNic",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'sqlNsg')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nicTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "nic-settings": {
                        "value": {
                            "name": "cluster-fsw-nic]",
                            "ipConfigurations": [
                                {
                                    "name": "ipconfig1",
                                    "properties": {
                                        "privateIPAllocationMethod": "Dynamic",
                                        "subnet": {
                                            "id": "[concat(reference('sharedResources').outputs.vnetID.value, '/subnets/', parameters('vnet-settings').subnets.subnet3Name)]"
                                        }
                                    }
                                }
                            ],
                            "dnsSettings": {
                                "dnsServers": []
                            },
                            "enableIPForwarding": false,
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'sql-nsg')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "name": "mgmtVM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'mgmtNic')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').mgmt.accounts[0]]",
                            "accountType": "[parameters('storage-settings').mgmt.accountType]",
                            "newOrExisting": "[parameters('storage-settings').mgmt.newOrExisting]",
                            "existingRg": "[parameters('storage-settings').mgmt.existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "cluster-fsw-vm",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsSettings')[0])]",
                            "imagePublisher": "[variables('vmOS')[parameters('vm-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('vm-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('vm-settings').type][2]]",
                            "nicID": "[reference('clusterFswNic').outputs.nicID.value]",
                            "vmSize": "Standard_D2_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('webVM-', copyindex())]",
            "copy": {
                "name": "vmLoop",
                "count": 1
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', concat('webNic-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').web.accounts[variables('math').modulo2[copyIndex()]]]",
                            "accountType": "[parameters('storage-settings').web.accountType]",
                            "newOrExisting": "[parameters('storage-settings').web.newOrExisting]",
                            "existingRg": "[parameters('storage-settings').web.existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "[concat('web-vm-', copyindex())]",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsSettings').name[1])]",
                            "imagePublisher": "[variables('vmOS')[parameters('vm-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('vm-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('vm-settings').type][2]]",
                            "nicID": "[reference(concat('webNic-', copyindex())).outputs.nicID.value]",
                            "vmSize": "Standard_D2_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('bizVM-', copyindex())]",
            "copy": {
                "name": "vmLoop",
                "count": 1
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', concat('bizNic-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').biz.accounts[variables('math').modulo2[copyIndex()]]]",
                            "accountType": "[parameters('storage-settings').biz.accountType]",
                            "newOrExisting": "[parameters('storage-settings').biz.newOrExisting]",
                            "existingRg": "[parameters('storage-settings').biz.existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "[concat('biz-vm-', copyindex())]",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsSettings').name[2])]",
                            "imagePublisher": "[variables('vmOS')[parameters('vm-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('vm-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('vm-settings').type][2]]",
                            "nicID": "[reference(concat('bizNic-', copyindex())).outputs.nicID.value]",
                            "vmSize": "Standard_D2_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('sqlVM-', copyindex())]",
            "copy": {
                "name": "vmLoop",
                "count": 1
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', concat('sqlNic-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').sql.accounts[variables('math').modulo2[copyIndex()]]]",
                            "accountType": "[parameters('storage-settings').sql.accountType]",
                            "newOrExisting": "[parameters('storage-settings').sql.newOrExisting]",
                            "existingRg": "[parameters('storage-settings').sql.existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "[concat('sql-vm-', copyindex())]",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsSettings').name[3])]",
                            "imagePublisher": "[variables('vmOS')[parameters('sql-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('sql-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('sql-settings').type][2]]",
                            "nicID": "[reference(concat('sqlNic-', copyindex())).outputs.nicID.value]",
                            "vmSize": "Standard_DS4_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        },
        {
            "name": "[concat('dcVM-', copyindex())]",
            "copy": {
                "name": "vmLoop",
                "count": "[variables('dcCount')]"
            },
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', concat('dcNic-', copyindex()))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').dc.accounts[variables('math').modulo2[copyIndex()]]]",
                            "accountType": "[parameters('storage-settings').dc.accountType]",
                            "newOrExisting": "[parameters('storage-settings').dc.newOrExisting]",
                            "existingRg": "[parameters('storage-settings').dc.existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "[concat('dc-vm-', copyindex())]",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsSettings').name[4])]",
                            "imagePublisher": "[variables('vmOS')[parameters('vm-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('vm-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('vm-settings').type][2]]",
                            "nicID": "[reference(concat('dcNic-', copyindex())).outputs.nicID.value]",
                            "vmSize": "Standard_D2_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        },
        {
            "name": "clusterFswVM",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sharedResources')]",
                "[resourceId('Microsoft.Resources/deployments', 'clusterFswNic')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storage-settings": {
                        "value": {
                            "name": "[parameters('storage-settings').sqlFsw.accounts[0]]",
                            "accountType": "[parameters('storage-settings').sqlFsw.accountType]",
                            "newOrExisting": "[parameters('storage-settings').sqlFsw.newOrExisting]",
                            "existingRg": "[parameters('storage-settings').sqlFsw.existingRg]"
                        }
                    },
                    "vm-settings": {
                        "value": {
                            "name": "cluster-fsw-vm",
                            "adminUserName": "[parameters('vm-settings').adminUserName]",
                            "adminPassword": "[parameters('vm-settings').adminPassword]",
                            "avsID": "[resourceId('Microsoft.Compute/availabilitySets', variables('avsSettings').name[3])]",
                            "imagePublisher": "[variables('vmOS')[parameters('vm-settings').type][0]]",
                            "imageOffer": "[variables('vmOS')[parameters('vm-settings').type][1]]",
                            "imageSku": "[variables('vmOS')[parameters('vm-settings').type][2]]",
                            "nicID": "[reference('clusterFswNic').outputs.nicID.value]",
                            "vmSize": "Standard_D2_v2",
                            "storageAccountContainerName": "[toLower(concat(resourceGroup().name, '-', uniqueString(resourceGroup().id, deployment().name)))]"
                        }
                    }
                }
            }
        }
    ],
    "outputs": {}
}
